.\new\74.kt
import IMPORT
kotlin Identifier
. DOT
reflect Identifier
. DOT
KProperty Identifier
class CLASS
Example Identifier
{ LCURL
var VAR
p Identifier
: COLON
String Identifier
by BY
Delegate Identifier
( LPAREN
) RPAREN
override OVERRIDE
fun FUN
toString Identifier
( LPAREN
) RPAREN
= ASSIGNMENT
"Example Class" lineStringLiteral
} RCURL
class CLASS
Delegate Identifier
( LPAREN
) RPAREN
{ LCURL
operator OPERATOR
fun FUN
getValue Identifier
( LPAREN
thisRef Identifier
: COLON
Any Identifier
? QUEST_NO_WS
, COMMA
prop Identifier
: COLON
KProperty Identifier
< LANGLE
* MULT
> RANGLE
) RPAREN
: COLON
String Identifier
{ LCURL
return RETURN
"$thisRef, thank you for delegating '${prop.name}' to me!" lineStringLiteral
} RCURL
operator OPERATOR
fun FUN
setValue Identifier
( LPAREN
thisRef Identifier
: COLON
Any Identifier
? QUEST_NO_WS
, COMMA
prop Identifier
: COLON
KProperty Identifier
< LANGLE
* MULT
> RANGLE
, COMMA
value Identifier
: COLON
String Identifier
) RPAREN
{ LCURL
println Identifier
( LPAREN
"$value has been assigned to ${prop.name} in $thisRef" lineStringLiteral
) RPAREN
} RCURL
} RCURL
fun FUN
main Identifier
( LPAREN
) RPAREN
{ LCURL
val VAL
e Identifier
= ASSIGNMENT
Example Identifier
( LPAREN
) RPAREN
println Identifier
( LPAREN
e Identifier
. DOT
p Identifier
) RPAREN
e Identifier
. DOT
p Identifier
= ASSIGNMENT
"NEW" lineStringLiteral
} RCURL
