RESERVED ...
COMMA ,
LPAREN (
RPAREN )
LSQUARE [
RSQUARE ]
LCURL {
RCURL }
MULT *
MOD %
DIV /
ADD +
SUB -
INCR ++
DECR -- 
CONJ &&
DISJ ||
EXCL_NO_WS !
COLON :
SEMICOLON ;
ASSIGNMENT =
ADD_ASSIGNMENT +=
SUB_ASSIGNMENT -=
MULT_ASSIGNMENT *=
DIV_ASSIGNMENT /=
MOD_ASSIGNMENT %=
ARROW ->
DOUBLE_ARROW =>
RANGE ..
COLONCOLON ::
DOUBLE_SEMICOLON ;;
HASH #
AT_NO_WS @
QUEST_NO_WS ?
LANGLE <
RANGLE >
LE <=
GE >=
EXCL_EQ !=
EXCL_EQEQ !==
AS_SAFE as?
EQEQ ==
EQEQEQ ===
SINGLE_QUOTE '
RETURN_AT return@
CONTINUE_AT continue@
BREAK_AT break@
THIS_AT this@
SUPER_AT super@
FILE file
FIELD field
PROPERTY property
GET get
SET set
RECEIVER receiver
PARAM param
SETPARAM setparam
DELEGATE delegate
PACKAGE package
IMPORT import
CLASS class
INTERFACE interface
FUN fun
OBJECT object
VAL val
VAR var
TYPE_ALIAS typealias
CONSTRUCTOR constructor
BY by
COMPANION companion
INIT init
THIS this
SUPER super
TYPEOF typeof
WHERE where
IF if
ELSE else
WHEN when
TRY try
CATCH catch
FINALLY finally
FOR for
DO do
WHILE while
THROW throw
RETURN return
CONTINUE continue
BREAK break
AS as
IS is
IN in
NOT_IS !is
NOT_IN !in
OUT out
DYNAMIC dynamic
PUBLIC public
PRIVATE private
PROTECTED protected
INTERNAL internal
ENUM enum
SEALED sealed
ANNOTATION annotation
DATA data
INNER inner
TAILREC tailrec
OPERATOR operator
INLINE inline
INFIX infix
EXTERNAL external
SUSPEND suspend
OVERRIDE override
ABSTRACT abstract
FINAL final
OPEN open
CONST const
LATEINIT lateinit
VARARG vararg
NOINLINE noinline
CROSSINLINE crossinline
REIFIED reified
EXPECT expect
ACTUAL actual
BooleanLiteral true
BooleanLiteral false
NullLiteral null