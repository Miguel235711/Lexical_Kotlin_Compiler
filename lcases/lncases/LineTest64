.\lcases\l_64.kt
val VAL
map Identifier
= ASSIGNMENT
mapOf Identifier
( LPAREN
"key" lineStringLiteral
to Identifier
42 IntegerLiteral
) RPAREN
val VAL
value1 Identifier
= ASSIGNMENT
map Identifier
[ LSQUARE
"key" lineStringLiteral
] RSQUARE
val VAL
value2 Identifier
= ASSIGNMENT
map Identifier
[ LSQUARE
"key2" lineStringLiteral
] RSQUARE
val VAL
value3 Identifier
: COLON
Int Identifier
= ASSIGNMENT
map Identifier
. DOT
getValue Identifier
( LPAREN
"key" lineStringLiteral
) RPAREN
val VAL
mapWithDefault Identifier
= ASSIGNMENT
map Identifier
. DOT
withDefault Identifier
{ LCURL
k Identifier
-> ARROW
k Identifier
. DOT
length Identifier
} RCURL
val VAL
value4 Identifier
= ASSIGNMENT
mapWithDefault Identifier
. DOT
getValue Identifier
( LPAREN
"key2" lineStringLiteral
) RPAREN
try TRY
{ LCURL
map Identifier
. DOT
getValue Identifier
( LPAREN
"anotherKey" lineStringLiteral
) RPAREN
} RCURL
catch CATCH
( LPAREN
e Identifier
: COLON
NoSuchElementException Identifier
) RPAREN
{ LCURL
println Identifier
( LPAREN
"Message:$e" lineStringLiteral
) RPAREN
} RCURL
