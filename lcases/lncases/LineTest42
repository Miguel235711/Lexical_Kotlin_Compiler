.\lcases\l_42.kt
fun FUN
calculate Identifier
( LPAREN
x Identifier
: COLON
Int Identifier
, COMMA
y Identifier
: COLON
Int Identifier
, COMMA
operation Identifier
: COLON
( LPAREN
Int Identifier
, COMMA
Int Identifier
) RPAREN
-> ARROW
Int Identifier
) RPAREN
: COLON
Int Identifier
{ LCURL
return RETURN
operation Identifier
( LPAREN
x Identifier
, COMMA
y Identifier
) RPAREN
} RCURL
fun FUN
sum Identifier
( LPAREN
x Identifier
: COLON
Int Identifier
, COMMA
y Identifier
: COLON
Int Identifier
) RPAREN
= ASSIGNMENT
x Identifier
+ ADD
y Identifier
fun FUN
main Identifier
( LPAREN
) RPAREN
{ LCURL
val VAL
sumResult Identifier
= ASSIGNMENT
calculate Identifier
( LPAREN
4 IntegerLiteral
, COMMA
5 IntegerLiteral
, COMMA
:: COLONCOLON
sum Identifier
) RPAREN
val VAL
mulResult Identifier
= ASSIGNMENT
calculate Identifier
( LPAREN
4 IntegerLiteral
, COMMA
5 IntegerLiteral
) RPAREN
{ LCURL
a Identifier
, COMMA
b Identifier
-> ARROW
a Identifier
* MULT
b Identifier
} RCURL
println Identifier
( LPAREN
"sumResult $sumResult, mulResult $mulResult" lineStringLiteral
) RPAREN
} RCURL
